{"code":"import * as tslib_1 from \"tslib\";\r\nimport { EmdiService } from './emd-service';\r\nimport { EmdiError } from './commands/emdi-command';\r\nimport { EmdiFactory } from './emdi-factory';\r\nimport { of, BehaviorSubject, empty } from 'rxjs';\r\nimport { map, timeout, catchError, filter, switchMap } from 'rxjs/operators';\r\nimport * as utf8 from 'utf8';\r\nimport { SetDeviceVisibleStateCommand } from './commands/set-device-visible-state';\r\nimport { ContentMessageCommand } from './commands/content-message';\r\nimport { GetEgmIdCommand, SetEventSubCommand, } from './commands';\r\nvar EmdiClient = /** @class */ (function () {\r\n    function EmdiClient() {\r\n        this.sessionId = 1;\r\n        this.heartbeat = EmdiFactory.createCommand('Heartbeat');\r\n        this.isSessionValid = false;\r\n        this.accessToken = 0;\r\n        this._connected$ = new BehaviorSubject(undefined);\r\n        this._disconnected$ = new BehaviorSubject(undefined);\r\n        this._validated$ = new BehaviorSubject(undefined);\r\n        this._event$ = new BehaviorSubject(null);\r\n        this._response$ = new BehaviorSubject(null);\r\n        this._request$ = new BehaviorSubject(null);\r\n        this._error$ = new BehaviorSubject(null);\r\n        this.isConnected = false;\r\n        this.deviceId = 0;\r\n        this.egmId = '';\r\n        this.service = new EmdiService();\r\n    }\r\n    Object.defineProperty(EmdiClient.prototype, \"error$\", {\r\n        get: function () {\r\n            return this._error$.asObservable().pipe(filter(function (e) { return e != null; }), map(function (e) { return e; }));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(EmdiClient.prototype, \"connected$\", {\r\n        get: function () {\r\n            return this._connected$.asObservable().pipe(filter(function (connected) { return !!connected; }), map(function (connected) { return !!connected; }));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(EmdiClient.prototype, \"disconnected$\", {\r\n        get: function () {\r\n            return this._disconnected$.asObservable().pipe(filter(function (disconnected) { return !!disconnected; }), switchMap(function () { return empty(); }));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(EmdiClient.prototype, \"validated$\", {\r\n        get: function () {\r\n            return this._validated$.asObservable().pipe(filter(function (validated) { return !!validated; }), map(function (validated) { return !!validated; }));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(EmdiClient.prototype, \"event$\", {\r\n        get: function () {\r\n            return this._event$.asObservable().pipe(filter(function (e) { return e != null; }), map(function (e) { return e; }));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(EmdiClient.prototype, \"request$\", {\r\n        get: function () {\r\n            return this._request$.asObservable().pipe(filter(function (c) { return c != null; }), map(function (c) { return c; }));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(EmdiClient.prototype, \"response$\", {\r\n        get: function () {\r\n            return this._response$.asObservable().pipe(filter(function (r) { return r != null; }), map(function (r) { return r; }));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    EmdiClient.prototype.connect = function (deviceId, accessToken) {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            try {\r\n                if (_this.isConnected) {\r\n                    resolve(true);\r\n                    return;\r\n                }\r\n                _this.messages = _this.service.connect(deviceId).pipe(map(function (message) {\r\n                    var data = utf8.decode(message.data);\r\n                    return data;\r\n                }));\r\n                _this.subscription = _this.messages.subscribe(function (data) {\r\n                    _this.onReceive(data);\r\n                }, function (err) {\r\n                    _this.onError(new EmdiError(err.message, 'Client'));\r\n                }, function () {\r\n                    console.log(\"connection closed\");\r\n                    clearInterval(_this.pulseInterval);\r\n                    _this.isConnected = false;\r\n                    _this.isSessionValid = false;\r\n                    _this.onDisconnected();\r\n                });\r\n                _this.sessionId = 1;\r\n                _this.deviceId = deviceId;\r\n                _this.accessToken = accessToken;\r\n                _this.isConnected = true;\r\n                _this.onConnected();\r\n                _this.validate();\r\n                resolve(true);\r\n            }\r\n            catch (err) {\r\n                console.error(\"error connecting to device \" + deviceId + \": \" + err);\r\n                resolve(false);\r\n            }\r\n        });\r\n    };\r\n    EmdiClient.prototype.validate = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            try {\r\n                if (_this.isSessionValid) {\r\n                    resolve(true);\r\n                    return;\r\n                }\r\n                var command = EmdiFactory.createCommand('CommsOnLine');\r\n                command.accessToken = parseInt(_this.accessToken.toString(), 10);\r\n                _this.sendCommand(command)\r\n                    .then(function (response) {\r\n                    _this.isSessionValid = response.sessionValid;\r\n                    if (_this.isSessionValid) {\r\n                        _this.getEgmId().then(function (egmId) { return (_this.egmId = egmId); });\r\n                        _this.onValidated();\r\n                    }\r\n                    resolve(_this.isSessionValid);\r\n                })\r\n                    .catch(function (error) {\r\n                    throw error;\r\n                });\r\n            }\r\n            catch (error) {\r\n                reject(error);\r\n            }\r\n        });\r\n    };\r\n    EmdiClient.prototype.disconnect = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                if (this.subscription) {\r\n                    this.subscription.unsubscribe();\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    EmdiClient.prototype.show = function () {\r\n        return this.setDeviceVisbleState(true);\r\n    };\r\n    EmdiClient.prototype.hide = function () {\r\n        return this.setDeviceVisbleState(false);\r\n    };\r\n    EmdiClient.prototype.getEgmId = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            try {\r\n                var command = new GetEgmIdCommand();\r\n                _this.sendCommand(command)\r\n                    .then(function (response) { return resolve(response.egmId); })\r\n                    .catch(function (error) {\r\n                    throw error;\r\n                });\r\n            }\r\n            catch (error) {\r\n                reject(error);\r\n            }\r\n        });\r\n    };\r\n    EmdiClient.prototype.sendContent = function (mediaDisplayId, contentId, contentData) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            try {\r\n                var command = new ContentMessageCommand();\r\n                command.mediaDisplayId = mediaDisplayId;\r\n                command.contentId = contentId;\r\n                command.contentData = contentData;\r\n                _this.sendCommand(command)\r\n                    .then(function (response) {\r\n                    resolve();\r\n                })\r\n                    .catch(function (error) {\r\n                    throw error;\r\n                });\r\n            }\r\n            catch (error) {\r\n                reject(error);\r\n            }\r\n        });\r\n    };\r\n    EmdiClient.prototype.subscribe = function () {\r\n        var _this = this;\r\n        var codes = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            codes[_i] = arguments[_i];\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            try {\r\n                var command_1 = new SetEventSubCommand();\r\n                codes.forEach(function (code) { return command_1.eventSubscriptions.push({ code: code }); });\r\n                _this.sendCommand(command_1)\r\n                    .then(function (response) {\r\n                    var subs = response.eventSubscriptions;\r\n                    resolve(subs.map(function (sub) { return sub.code; }));\r\n                })\r\n                    .catch(function (error) {\r\n                    throw error;\r\n                });\r\n            }\r\n            catch (error) {\r\n                reject(error);\r\n            }\r\n        });\r\n    };\r\n    EmdiClient.prototype.reconnect = function () {\r\n        this.connect(this.deviceId, this.accessToken);\r\n    };\r\n    EmdiClient.prototype.onEvent = function (event) {\r\n        this._event$.next(event);\r\n    };\r\n    EmdiClient.prototype.onResponse = function (response) {\r\n        this._response$.next(response);\r\n    };\r\n    EmdiClient.prototype.onRequest = function (command) {\r\n        this._request$.next(command);\r\n    };\r\n    EmdiClient.prototype.onError = function (error) {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n        clearInterval(this.pulseInterval);\r\n        this._error$.next(error);\r\n        this.isConnected = false;\r\n        this.reconnect();\r\n    };\r\n    EmdiClient.prototype.onConnected = function () {\r\n        this._connected$.next(true);\r\n    };\r\n    EmdiClient.prototype.onDisconnected = function () {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n        clearInterval(this.pulseInterval);\r\n        this._disconnected$.next(true);\r\n        this.isConnected = false;\r\n        this.reconnect();\r\n    };\r\n    EmdiClient.prototype.onValidated = function () {\r\n        this._validated$.next(true);\r\n    };\r\n    EmdiClient.prototype.sendCommand = function (command) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            try {\r\n                if (!_this.isConnected) {\r\n                    throw new Error('No connection');\r\n                }\r\n                if (_this.pulseInterval) {\r\n                    clearInterval(_this.pulseInterval);\r\n                }\r\n                _this.pulseInterval = setInterval(function () { return _this.pulse(); }, 25000);\r\n                _this.onRequest(command);\r\n                var sessionId_1 = _this.sessionId;\r\n                var xml = command.getXml(sessionId_1);\r\n                // console.log('default', this.hexEscape(xml));\r\n                xml = utf8.encode(xml);\r\n                // console.log('encoded', this.hexEscape(xml));\r\n                _this.messages.next(xml);\r\n                _this.sessionId++;\r\n                var subscription_1 = _this.response$\r\n                    .pipe(filter(function (response) { return response.sessionId === sessionId_1; }), timeout(30000), catchError(function () { return of(new Error(\"Response timeout: \" + command.name)); }))\r\n                    .subscribe(function (result) {\r\n                    if (result instanceof Error) {\r\n                        reject(result);\r\n                    }\r\n                    else {\r\n                        resolve(result);\r\n                    }\r\n                    subscription_1.unsubscribe();\r\n                });\r\n            }\r\n            catch (error) {\r\n                reject(error);\r\n            }\r\n        });\r\n    };\r\n    EmdiClient.prototype.setDeviceVisbleState = function (state) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            try {\r\n                var command = new SetDeviceVisibleStateCommand();\r\n                command.deviceVisibleState = state;\r\n                _this.sendCommand(command)\r\n                    .then(function (response) {\r\n                    resolve(response.deviceVisibleState === state);\r\n                })\r\n                    .catch(function (error) {\r\n                    throw error;\r\n                });\r\n            }\r\n            catch (error) {\r\n                reject(error);\r\n            }\r\n        });\r\n    };\r\n    EmdiClient.prototype.sendResponse = function (event) {\r\n        if (!this.isConnected) {\r\n            throw new Error('No connection');\r\n        }\r\n        var xml = event.ack.getXml(event.sessionId);\r\n        xml = utf8.encode(xml);\r\n        this.messages.next(xml);\r\n    };\r\n    EmdiClient.prototype.pulse = function () {\r\n        this.sendCommand(this.heartbeat);\r\n    };\r\n    EmdiClient.prototype.onReceive = function (xml) {\r\n        var _this = this;\r\n        console.log('receive: xml =', this.formatXml(xml));\r\n        EmdiFactory.createResponseOrEvent(xml).then(function (result) {\r\n            console.log('createResponseOrEvent', result);\r\n            if (_this.isErrorType(result)) {\r\n                _this.onError(result);\r\n            }\r\n            else if (_this.isResponseType(result)) {\r\n                var response = result;\r\n                _this.onResponse(response);\r\n            }\r\n            else if (_this.isEventType(result)) {\r\n                var event_1 = result;\r\n                _this.sendResponse(event_1);\r\n                _this.onEvent(event_1);\r\n            }\r\n        });\r\n    };\r\n    EmdiClient.prototype.isCommsOnLineAckType = function (value) {\r\n        return value.sessionValid !== undefined;\r\n    };\r\n    EmdiClient.prototype.isErrorType = function (value) {\r\n        return value.error !== undefined;\r\n    };\r\n    EmdiClient.prototype.isResponseType = function (value) {\r\n        return value.responseType !== undefined;\r\n    };\r\n    EmdiClient.prototype.isEventType = function (value) {\r\n        return value.eventType !== undefined;\r\n    };\r\n    EmdiClient.prototype.formatXml = function (xml) {\r\n        var formatted = '';\r\n        var reg = /(>)(<)(\\/*)/g;\r\n        var pad = 0;\r\n        xml = xml.replace(reg, '$1\\r\\n$2$3');\r\n        xml.split('\\r\\n').forEach(function (node) {\r\n            var indent = 0;\r\n            if (node.match(/.+<\\/\\w[^>]*>$/)) {\r\n                indent = 0;\r\n            }\r\n            else if (node.match(/^<\\/\\w/)) {\r\n                if (pad !== 0) {\r\n                    pad -= 1;\r\n                }\r\n            }\r\n            else if (node.match(/^<\\w([^>]*[^\\/])?>.*$/)) {\r\n                indent = 1;\r\n            }\r\n            else {\r\n                indent = 0;\r\n            }\r\n            var padding = '';\r\n            for (var i = 0; i < pad; i++) {\r\n                padding += '  ';\r\n            }\r\n            formatted += padding + node + '\\r\\n';\r\n            pad += indent;\r\n        });\r\n        return formatted;\r\n    };\r\n    return EmdiClient;\r\n}());\r\nexport { EmdiClient };\r\n//# sourceMappingURL=emdi-client.js.map","map":{"version":3,"file":"emdi-client.js","sourceRoot":"","sources":["../project/src/emdi-client.ts"],"names":[],"mappings":"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"},"dts":{"name":"C:/Aristocrat/Projects/emdijs/lib/src/emdi-client.d.ts","text":"export declare class EmdiClient {\r\n    private service;\r\n    private sessionId;\r\n    private pulseInterval;\r\n    private heartbeat;\r\n    private isSessionValid;\r\n    private messages;\r\n    private accessToken;\r\n    private subscription;\r\n    private _connected$;\r\n    private _disconnected$;\r\n    private _validated$;\r\n    private _event$;\r\n    private _response$;\r\n    private _request$;\r\n    private _error$;\r\n    isConnected: boolean;\r\n    deviceId: number;\r\n    egmId: string;\r\n    constructor();\r\n    readonly error$: any;\r\n    readonly connected$: any;\r\n    readonly disconnected$: any;\r\n    readonly validated$: any;\r\n    readonly event$: any;\r\n    readonly request$: any;\r\n    readonly response$: any;\r\n    connect(deviceId: number, accessToken: number): Promise<boolean>;\r\n    validate(): Promise<boolean>;\r\n    disconnect(): Promise<void>;\r\n    show(): Promise<boolean>;\r\n    hide(): Promise<boolean>;\r\n    getEgmId(): Promise<string>;\r\n    sendContent(mediaDisplayId: number, contentId: number, contentData: string): Promise<void>;\r\n    subscribe(...codes: string[]): Promise<string[]>;\r\n    private reconnect;\r\n    private onEvent;\r\n    private onResponse;\r\n    private onRequest;\r\n    private onError;\r\n    private onConnected;\r\n    private onDisconnected;\r\n    private onValidated;\r\n    private sendCommand;\r\n    private setDeviceVisbleState;\r\n    private sendResponse;\r\n    private pulse;\r\n    private onReceive;\r\n    private isCommsOnLineAckType;\r\n    private isErrorType;\r\n    private isResponseType;\r\n    private isEventType;\r\n    private formatXml;\r\n}\r\n"}}
