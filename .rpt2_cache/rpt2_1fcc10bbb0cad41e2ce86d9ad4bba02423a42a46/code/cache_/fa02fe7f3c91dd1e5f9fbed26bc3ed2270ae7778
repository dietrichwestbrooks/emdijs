{"code":"import { EmdiClasses, EmdiResponses } from './emdi-command';\r\nvar SupportedMeterListResponse = /** @class */ (function () {\r\n    function SupportedMeterListResponse(data) {\r\n        this.name = 'SupportedMeterList';\r\n        this.responseType = EmdiResponses.SupportedMeterList;\r\n        this.class = EmdiClasses.Meters;\r\n        this.supportedMeters = [];\r\n        console.log('SupportedMeterListResponse =', data);\r\n        for (var _i = 0, _a = data['md:supportedMeter']; _i < _a.length; _i++) {\r\n            var meter = _a[_i];\r\n            console.log('meter =', meter);\r\n            this.supportedMeters.push({\r\n                name: meter['$']['md:meterName'],\r\n                type: meter['$']['md:meterType'],\r\n            });\r\n        }\r\n    }\r\n    return SupportedMeterListResponse;\r\n}());\r\nexport { SupportedMeterListResponse };\r\n//# sourceMappingURL=supported-meter-list.js.map","map":"{\"version\":3,\"file\":\"supported-meter-list.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../project/src/commands/supported-meter-list.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAgB,WAAW,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAC;AAE1E;IAOE,oCAAY,IAAS;QANrB,SAAI,GAAG,oBAAoB,CAAC;QAC5B,iBAAY,GAAG,aAAa,CAAC,kBAAkB,CAAC;QAChD,UAAK,GAAG,WAAW,CAAC,MAAM,CAAC;QAE3B,oBAAe,GAAqC,EAAE,CAAC;QAGrD,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,IAAI,CAAC,CAAC;QAElD,GAAG,CAAC,CAAgB,UAAyB,EAAzB,KAAA,IAAI,CAAC,mBAAmB,CAAC,EAAzB,cAAyB,EAAzB,IAAyB;YAAxC,IAAM,KAAK,SAAA;YACd,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;YAC9B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;gBACxB,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC;gBAChC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC;aACjC,CAAC,CAAC;SACJ;IACH,CAAC;IACH,iCAAC;AAAD,CAAC,AAlBD,IAkBC\"}","dts":{"name":"C:/Aristocrat/Projects/emdijs/lib/src/commands/supported-meter-list.d.ts","text":"import { EmdiResponse, EmdiClasses, EmdiResponses } from './emdi-command';\r\nexport declare class SupportedMeterListResponse implements EmdiResponse {\r\n    name: string;\r\n    responseType: EmdiResponses;\r\n    class: EmdiClasses;\r\n    sessionId: number;\r\n    supportedMeters: {\r\n        name: string;\r\n        type: string;\r\n    }[];\r\n    constructor(data: any);\r\n}\r\n"}}
