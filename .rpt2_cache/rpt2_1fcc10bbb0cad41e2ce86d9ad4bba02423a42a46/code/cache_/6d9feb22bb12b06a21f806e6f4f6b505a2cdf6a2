{"code":"import * as tslib_1 from \"tslib\";\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nvar RetryWebSocket = /** @class */ (function () {\r\n    function RetryWebSocket(url, timeout, retries, interval) {\r\n        if (timeout === void 0) { timeout = 1500; }\r\n        if (retries === void 0) { retries = 30; }\r\n        if (interval === void 0) { interval = 1000; }\r\n        this.url = url;\r\n        this.timeout = timeout;\r\n        this.retries = retries;\r\n        this.interval = interval;\r\n        this._message = new BehaviorSubject(null);\r\n        this._close = new BehaviorSubject(null);\r\n        this._error = new BehaviorSubject(null);\r\n        timeout = timeout || 1500;\r\n        retries = retries || 0;\r\n        interval = interval || 0;\r\n    }\r\n    Object.defineProperty(RetryWebSocket.prototype, \"message\", {\r\n        get: function () {\r\n            return this._message.asObservable().pipe(filter(function (event) { return event != null; }), map(function (event) { return event; }));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RetryWebSocket.prototype, \"close\", {\r\n        get: function () {\r\n            return this._close.asObservable().pipe(filter(function (event) { return event != null; }), map(function (event) { return event; }));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RetryWebSocket.prototype, \"error\", {\r\n        get: function () {\r\n            return this._error.asObservable().pipe(filter(function (event) { return event != null; }), map(function (event) { return event; }));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RetryWebSocket.prototype, \"readyState\", {\r\n        get: function () {\r\n            return this.socket.readyState;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    RetryWebSocket.prototype.open = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this;\r\n                        return [4 /*yield*/, this.openInternal(this.retries)];\r\n                    case 1:\r\n                        _a.socket = _b.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RetryWebSocket.prototype.openInternal = function (retries) {\r\n        var _this = this;\r\n        console.log('connecting to websocket! url: ' + this.url + ', remaining retries: ' + retries);\r\n        var socket;\r\n        return new Promise(function (resolve, reject) {\r\n            try {\r\n                var timer_1 = setTimeout(function () {\r\n                    console.log('opening websocket timed out connecting to ' + _this.url);\r\n                    rejectPromise();\r\n                }, _this.timeout);\r\n                socket = new WebSocket(_this.url);\r\n                var opened_1 = false;\r\n                socket.onopen = function () {\r\n                    clearTimeout(timer_1);\r\n                    opened_1 = true;\r\n                    console.log('websocket opened', _this.url);\r\n                    resolve(socket);\r\n                };\r\n                socket.onerror = function (event) {\r\n                    if (opened_1) {\r\n                        console.log('websocket error on connection to ' + _this.url);\r\n                        _this._error.next(event);\r\n                    }\r\n                };\r\n                socket.onmessage = function (event) {\r\n                    if (opened_1) {\r\n                        _this._message.next(event);\r\n                    }\r\n                };\r\n                socket.onclose = function (event) {\r\n                    if (opened_1) {\r\n                        console.log('websocket closed to ', _this.url);\r\n                        _this._close.next(event);\r\n                    }\r\n                };\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n            var rejectPromise = function () {\r\n                try {\r\n                    if (socket) {\r\n                        console.log('closing websocket connection to ' + _this.url);\r\n                        socket.close();\r\n                    }\r\n                    if (retries <= 0) {\r\n                        reject(new Error('retries exhasuted'));\r\n                    }\r\n                    else {\r\n                        setTimeout(function () {\r\n                            _this.openInternal(retries - 1).then(resolve, reject);\r\n                        }, _this.interval);\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    reject(err);\r\n                }\r\n            };\r\n        });\r\n    };\r\n    RetryWebSocket.prototype.send = function (data) {\r\n        this.socket.send(data);\r\n    };\r\n    RetryWebSocket.prototype.dispose = function () {\r\n        if (this.socket && this.socket.readyState === WebSocket.OPEN) {\r\n            this.socket.close();\r\n        }\r\n    };\r\n    return RetryWebSocket;\r\n}());\r\nexport { RetryWebSocket };\r\n//# sourceMappingURL=retry-websocket.js.map","map":"{\"version\":3,\"file\":\"retry-websocket.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../project/src/retry-websocket.ts\"],\"names\":[],\"mappings\":\";AAAA,OAAO,EAAE,eAAe,EAAc,MAAM,MAAM,CAAC;AACnD,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AAE7C;IAOE,wBACU,GAAW,EACX,OAAc,EACd,OAAY,EACZ,QAAe;QAFf,wBAAA,EAAA,cAAc;QACd,wBAAA,EAAA,YAAY;QACZ,yBAAA,EAAA,eAAe;QAHf,QAAG,GAAH,GAAG,CAAQ;QACX,YAAO,GAAP,OAAO,CAAO;QACd,YAAO,GAAP,OAAO,CAAK;QACZ,aAAQ,GAAR,QAAQ,CAAO;QARzB,aAAQ,GAAG,IAAI,eAAe,CAAsB,IAAI,CAAC,CAAC;QAC1D,WAAM,GAAG,IAAI,eAAe,CAAoB,IAAI,CAAC,CAAC;QACtD,WAAM,GAAG,IAAI,eAAe,CAAe,IAAI,CAAC,CAAC;QAQ/C,OAAO,GAAG,OAAO,IAAI,IAAI,CAAC;QAC1B,OAAO,GAAG,OAAO,IAAI,CAAC,CAAC;QACvB,QAAQ,GAAG,QAAQ,IAAI,CAAC,CAAC;IAC3B,CAAC;IAED,sBAAI,mCAAO;aAAX;YACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,IAAI,CACtC,MAAM,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,IAAI,IAAI,EAAb,CAAa,CAAC,EAC9B,GAAG,CAAC,UAAA,KAAK,IAAI,OAAc,KAAK,EAAnB,CAAmB,CAAC,CAClC,CAAC;QACJ,CAAC;;;OAAA;IAED,sBAAI,iCAAK;aAAT;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,IAAI,CACpC,MAAM,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,IAAI,IAAI,EAAb,CAAa,CAAC,EAC9B,GAAG,CAAC,UAAA,KAAK,IAAI,OAAY,KAAK,EAAjB,CAAiB,CAAC,CAChC,CAAC;QACJ,CAAC;;;OAAA;IAED,sBAAI,iCAAK;aAAT;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,IAAI,CACpC,MAAM,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,IAAI,IAAI,EAAb,CAAa,CAAC,EAC9B,GAAG,CAAC,UAAA,KAAK,IAAI,OAAO,KAAK,EAAZ,CAAY,CAAC,CAC3B,CAAC;QACJ,CAAC;;;OAAA;IAED,sBAAI,sCAAU;aAAd;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;QAChC,CAAC;;;OAAA;IAEK,6BAAI,GAAV;;;;;;wBACE,KAAA,IAAI,CAAA;wBAAU,qBAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,EAAA;;wBAAnD,GAAK,MAAM,GAAG,SAAqC,CAAC;;;;;KACrD;IAEO,qCAAY,GAApB,UAAqB,OAAe;QAApC,iBAiEC;QAhEC,OAAO,CAAC,GAAG,CAAC,gCAAgC,GAAG,IAAI,CAAC,GAAG,GAAG,uBAAuB,GAAG,OAAO,CAAC,CAAC;QAE7F,IAAI,MAAW,CAAC;QAEhB,MAAM,CAAC,IAAI,OAAO,CAAY,UAAC,OAAO,EAAE,MAAM;YAC5C,IAAI,CAAC;gBACH,IAAM,OAAK,GAAG,UAAU,CAAC;oBACvB,OAAO,CAAC,GAAG,CAAC,4CAA4C,GAAG,KAAI,CAAC,GAAG,CAAC,CAAC;oBACrE,aAAa,EAAE,CAAC;gBAClB,CAAC,EAAE,KAAI,CAAC,OAAO,CAAC,CAAC;gBAEjB,MAAM,GAAG,IAAI,SAAS,CAAC,KAAI,CAAC,GAAG,CAAC,CAAC;gBAEjC,IAAI,QAAM,GAAG,KAAK,CAAC;gBAEnB,MAAM,CAAC,MAAM,GAAG;oBACd,YAAY,CAAC,OAAK,CAAC,CAAC;oBACpB,QAAM,GAAG,IAAI,CAAC;oBACd,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,KAAI,CAAC,GAAG,CAAC,CAAC;oBAC1C,OAAO,CAAC,MAAM,CAAC,CAAC;gBAClB,CAAC,CAAC;gBAEF,MAAM,CAAC,OAAO,GAAG,UAAC,KAAY;oBAC5B,EAAE,CAAC,CAAC,QAAM,CAAC,CAAC,CAAC;wBACX,OAAO,CAAC,GAAG,CAAC,mCAAmC,GAAG,KAAI,CAAC,GAAG,CAAC,CAAC;wBAC5D,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC1B,CAAC;gBACH,CAAC,CAAC;gBAEF,MAAM,CAAC,SAAS,GAAG,UAAC,KAAmB;oBACrC,EAAE,CAAC,CAAC,QAAM,CAAC,CAAC,CAAC;wBACX,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC5B,CAAC;gBACH,CAAC,CAAC;gBAEF,MAAM,CAAC,OAAO,GAAG,UAAC,KAAiB;oBACjC,EAAE,CAAC,CAAC,QAAM,CAAC,CAAC,CAAC;wBACX,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,KAAI,CAAC,GAAG,CAAC,CAAC;wBAC9C,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC1B,CAAC;gBACH,CAAC,CAAC;YACJ,CAAC;YAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACb,MAAM,CAAC,GAAG,CAAC,CAAC;YACd,CAAC;YAED,IAAM,aAAa,GAAG;gBACpB,IAAI,CAAC;oBACH,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBACX,OAAO,CAAC,GAAG,CAAC,kCAAkC,GAAG,KAAI,CAAC,GAAG,CAAC,CAAC;wBAC3D,MAAM,CAAC,KAAK,EAAE,CAAC;oBACjB,CAAC;oBAED,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;wBACjB,MAAM,CAAC,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC;oBACzC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,UAAU,CAAC;4BACT,KAAI,CAAC,YAAY,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;wBACvD,CAAC,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC;oBACpB,CAAC;gBACH,CAAC;gBAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACb,MAAM,CAAC,GAAG,CAAC,CAAC;gBACd,CAAC;YACH,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6BAAI,GAAJ,UAAK,IAAuD;QAC1D,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzB,CAAC;IAED,gCAAO,GAAP;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YAC7D,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QACtB,CAAC;IACH,CAAC;IACH,qBAAC;AAAD,CAAC,AA3HD,IA2HC\"}","dts":{"name":"C:/Aristocrat/Projects/emdijs/lib/src/retry-websocket.d.ts","text":"import { BehaviorSubject, Observable } from 'rxjs';\r\nexport declare class RetryWebSocket {\r\n    private url;\r\n    private timeout;\r\n    private retries;\r\n    private interval;\r\n    socket: WebSocket;\r\n    _message: BehaviorSubject<MessageEvent | null>;\r\n    _close: BehaviorSubject<CloseEvent | null>;\r\n    _error: BehaviorSubject<Event | null>;\r\n    constructor(url: string, timeout?: number, retries?: number, interval?: number);\r\n    readonly message: Observable<MessageEvent>;\r\n    readonly close: Observable<CloseEvent>;\r\n    readonly error: Observable<Event>;\r\n    readonly readyState: number;\r\n    open(): Promise<void>;\r\n    private openInternal(retries);\r\n    send(data: string | ArrayBufferLike | Blob | ArrayBufferView): void;\r\n    dispose(): void;\r\n}\r\n"}}
