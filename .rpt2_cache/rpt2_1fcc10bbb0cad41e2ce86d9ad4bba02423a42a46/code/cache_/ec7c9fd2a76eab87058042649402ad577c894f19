{"code":"export var EmdiClasses;\r\n(function (EmdiClasses) {\r\n    EmdiClasses[EmdiClasses[\"Comms\"] = 0] = \"Comms\";\r\n    EmdiClasses[EmdiClasses[\"EventHandler\"] = 1] = \"EventHandler\";\r\n    EmdiClasses[EmdiClasses[\"Cabinet\"] = 2] = \"Cabinet\";\r\n    EmdiClasses[EmdiClasses[\"Meters\"] = 3] = \"Meters\";\r\n    EmdiClasses[EmdiClasses[\"ContentToContent\"] = 4] = \"ContentToContent\";\r\n    EmdiClasses[EmdiClasses[\"Host\"] = 5] = \"Host\";\r\n    EmdiClasses[EmdiClasses[\"Client\"] = 6] = \"Client\";\r\n})(EmdiClasses || (EmdiClasses = {}));\r\nexport var EmdiEvents;\r\n(function (EmdiEvents) {\r\n    EmdiEvents[EmdiEvents[\"MeterReport\"] = 0] = \"MeterReport\";\r\n    EmdiEvents[EmdiEvents[\"EventReport\"] = 1] = \"EventReport\";\r\n    EmdiEvents[EmdiEvents[\"ContentMessage\"] = 2] = \"ContentMessage\";\r\n    EmdiEvents[EmdiEvents[\"HostToContentMessage\"] = 3] = \"HostToContentMessage\";\r\n})(EmdiEvents || (EmdiEvents = {}));\r\nexport var EmdiResponses;\r\n(function (EmdiResponses) {\r\n    EmdiResponses[EmdiResponses[\"HeartbeatAck\"] = 0] = \"HeartbeatAck\";\r\n    EmdiResponses[EmdiResponses[\"CommsOnLineAck\"] = 1] = \"CommsOnLineAck\";\r\n    EmdiResponses[EmdiResponses[\"FunctionalGroupList\"] = 2] = \"FunctionalGroupList\";\r\n    EmdiResponses[EmdiResponses[\"EventSubList\"] = 3] = \"EventSubList\";\r\n    EmdiResponses[EmdiResponses[\"MeterSubList\"] = 4] = \"MeterSubList\";\r\n    EmdiResponses[EmdiResponses[\"ClearEventSubAck\"] = 5] = \"ClearEventSubAck\";\r\n    EmdiResponses[EmdiResponses[\"ContentMessageAck\"] = 6] = \"ContentMessageAck\";\r\n    EmdiResponses[EmdiResponses[\"ContentToHostMessageAck\"] = 7] = \"ContentToHostMessageAck\";\r\n    EmdiResponses[EmdiResponses[\"ActiveContentList\"] = 8] = \"ActiveContentList\";\r\n    EmdiResponses[EmdiResponses[\"CabinetStatus\"] = 9] = \"CabinetStatus\";\r\n    EmdiResponses[EmdiResponses[\"CallAttendantStatus\"] = 10] = \"CallAttendantStatus\";\r\n    EmdiResponses[EmdiResponses[\"CardStatus\"] = 11] = \"CardStatus\";\r\n    EmdiResponses[EmdiResponses[\"DeviceVisibleStatus\"] = 12] = \"DeviceVisibleStatus\";\r\n    EmdiResponses[EmdiResponses[\"SupportedEventList\"] = 13] = \"SupportedEventList\";\r\n    EmdiResponses[EmdiResponses[\"SupportedMeterList\"] = 14] = \"SupportedMeterList\";\r\n    EmdiResponses[EmdiResponses[\"LogContentEventAck\"] = 15] = \"LogContentEventAck\";\r\n    EmdiResponses[EmdiResponses[\"MeterReport\"] = 16] = \"MeterReport\";\r\n    EmdiResponses[EmdiResponses[\"EgmId\"] = 17] = \"EgmId\";\r\n})(EmdiResponses || (EmdiResponses = {}));\r\nexport var EmdiCommands;\r\n(function (EmdiCommands) {\r\n    EmdiCommands[EmdiCommands[\"ClearEventSub\"] = 0] = \"ClearEventSub\";\r\n    EmdiCommands[EmdiCommands[\"ClearMeterSub\"] = 1] = \"ClearMeterSub\";\r\n    EmdiCommands[EmdiCommands[\"CommsOnLine\"] = 2] = \"CommsOnLine\";\r\n    EmdiCommands[EmdiCommands[\"ContentMessage\"] = 3] = \"ContentMessage\";\r\n    EmdiCommands[EmdiCommands[\"ContentToHostMessage\"] = 4] = \"ContentToHostMessage\";\r\n    EmdiCommands[EmdiCommands[\"GetActiveContent\"] = 5] = \"GetActiveContent\";\r\n    EmdiCommands[EmdiCommands[\"GetCardState\"] = 6] = \"GetCardState\";\r\n    EmdiCommands[EmdiCommands[\"GetCabinetStatus\"] = 7] = \"GetCabinetStatus\";\r\n    EmdiCommands[EmdiCommands[\"GetCallAttendantState\"] = 8] = \"GetCallAttendantState\";\r\n    EmdiCommands[EmdiCommands[\"GetDeviceVisibleState\"] = 9] = \"GetDeviceVisibleState\";\r\n    EmdiCommands[EmdiCommands[\"GetEventSubList\"] = 10] = \"GetEventSubList\";\r\n    EmdiCommands[EmdiCommands[\"GetFunctionalGroups\"] = 11] = \"GetFunctionalGroups\";\r\n    EmdiCommands[EmdiCommands[\"GetEgmId\"] = 12] = \"GetEgmId\";\r\n    EmdiCommands[EmdiCommands[\"GetMeterSub\"] = 13] = \"GetMeterSub\";\r\n    EmdiCommands[EmdiCommands[\"GetMeterInfo\"] = 14] = \"GetMeterInfo\";\r\n    EmdiCommands[EmdiCommands[\"GetSupportedMeterList\"] = 15] = \"GetSupportedMeterList\";\r\n    EmdiCommands[EmdiCommands[\"GetSupportedEventList\"] = 16] = \"GetSupportedEventList\";\r\n    EmdiCommands[EmdiCommands[\"Heartbeat\"] = 17] = \"Heartbeat\";\r\n    EmdiCommands[EmdiCommands[\"LogContentEvent\"] = 18] = \"LogContentEvent\";\r\n    EmdiCommands[EmdiCommands[\"SetCallAttendantState\"] = 19] = \"SetCallAttendantState\";\r\n    EmdiCommands[EmdiCommands[\"SetCardRemoved\"] = 20] = \"SetCardRemoved\";\r\n    EmdiCommands[EmdiCommands[\"SetDeviceVisibleState\"] = 21] = \"SetDeviceVisibleState\";\r\n    EmdiCommands[EmdiCommands[\"SetEventSub\"] = 22] = \"SetEventSub\";\r\n    EmdiCommands[EmdiCommands[\"SetMeterSub\"] = 23] = \"SetMeterSub\";\r\n    EmdiCommands[EmdiCommands[\"ContentMessageAck\"] = 24] = \"ContentMessageAck\";\r\n    EmdiCommands[EmdiCommands[\"EventAck\"] = 25] = \"EventAck\";\r\n    EmdiCommands[EmdiCommands[\"HostToContentMessageAck\"] = 26] = \"HostToContentMessageAck\";\r\n    EmdiCommands[EmdiCommands[\"MeterReportAck\"] = 27] = \"MeterReportAck\";\r\n})(EmdiCommands || (EmdiCommands = {}));\r\nvar EmdiError = /** @class */ (function () {\r\n    function EmdiError(error, cls) {\r\n        this.error = error;\r\n        this.class = EmdiClasses[cls];\r\n    }\r\n    return EmdiError;\r\n}());\r\nexport { EmdiError };\r\nexport var availableMeters = [\r\n    { name: 'IGT_playerPointBalance', type: 'IGT_count', display: 'Player Point Balance' },\r\n    { name: 'IGT_playerPointCountdown', type: 'IGT_count', display: 'Player Point Countdown' },\r\n    { name: 'IGT_playerSessionPoints', type: 'IGT_count', display: 'Player Session Points' },\r\n    { name: 'IGT_wagerMatchBalance', type: 'IGT_count', display: 'Total Wager Match' },\r\n    { name: 'G2S_playerCashableAmt', type: 'IGT_amount', display: 'Player Cash Amount' },\r\n    { name: 'G2S_playerPromoAmt', type: 'IGT_amount', display: 'Player Promo Amount' },\r\n    { name: 'G2S_playerNonCashAmt', type: 'IGT_amount', display: 'Player Non-Cash Amount' },\r\n];\r\n//# sourceMappingURL=emdi-command.js.map","map":"{\"version\":3,\"file\":\"emdi-command.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../project/src/commands/emdi-command.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"C:/Aristocrat/Projects/emdijs/lib/src/commands/emdi-command.d.ts","text":"export declare enum EmdiClasses {\r\n    Comms = 0,\r\n    EventHandler = 1,\r\n    Cabinet = 2,\r\n    Meters = 3,\r\n    ContentToContent = 4,\r\n    Host = 5,\r\n    Client = 6,\r\n}\r\nexport declare enum EmdiEvents {\r\n    MeterReport = 0,\r\n    EventReport = 1,\r\n    ContentMessage = 2,\r\n    HostToContentMessage = 3,\r\n}\r\nexport declare enum EmdiResponses {\r\n    HeartbeatAck = 0,\r\n    CommsOnLineAck = 1,\r\n    FunctionalGroupList = 2,\r\n    EventSubList = 3,\r\n    MeterSubList = 4,\r\n    ClearEventSubAck = 5,\r\n    ContentMessageAck = 6,\r\n    ContentToHostMessageAck = 7,\r\n    ActiveContentList = 8,\r\n    CabinetStatus = 9,\r\n    CallAttendantStatus = 10,\r\n    CardStatus = 11,\r\n    DeviceVisibleStatus = 12,\r\n    SupportedEventList = 13,\r\n    SupportedMeterList = 14,\r\n    LogContentEventAck = 15,\r\n    MeterReport = 16,\r\n    EgmId = 17,\r\n}\r\nexport declare enum EmdiCommands {\r\n    ClearEventSub = 0,\r\n    ClearMeterSub = 1,\r\n    CommsOnLine = 2,\r\n    ContentMessage = 3,\r\n    ContentToHostMessage = 4,\r\n    GetActiveContent = 5,\r\n    GetCardState = 6,\r\n    GetCabinetStatus = 7,\r\n    GetCallAttendantState = 8,\r\n    GetDeviceVisibleState = 9,\r\n    GetEventSubList = 10,\r\n    GetFunctionalGroups = 11,\r\n    GetEgmId = 12,\r\n    GetMeterSub = 13,\r\n    GetMeterInfo = 14,\r\n    GetSupportedMeterList = 15,\r\n    GetSupportedEventList = 16,\r\n    Heartbeat = 17,\r\n    LogContentEvent = 18,\r\n    SetCallAttendantState = 19,\r\n    SetCardRemoved = 20,\r\n    SetDeviceVisibleState = 21,\r\n    SetEventSub = 22,\r\n    SetMeterSub = 23,\r\n    ContentMessageAck = 24,\r\n    EventAck = 25,\r\n    HostToContentMessageAck = 26,\r\n    MeterReportAck = 27,\r\n}\r\nexport declare type MeterType = 'IGT_count' | 'IGT_amount' | 'IGT_percent';\r\nexport interface MeterSubscription {\r\n    name: string;\r\n    type: MeterType;\r\n}\r\nexport interface EventSubscription {\r\n    code: string;\r\n}\r\nexport interface Display {\r\n    display: string;\r\n}\r\nexport interface EmdiCommand {\r\n    name: string;\r\n    commandType: EmdiCommands;\r\n    class: EmdiClasses;\r\n    getXml(sessionId: number): string;\r\n}\r\nexport interface EmdiResponse {\r\n    name: string;\r\n    responseType: EmdiResponses;\r\n    class: EmdiClasses;\r\n    sessionId: number;\r\n}\r\nexport interface EmdiEvent {\r\n    name: string;\r\n    eventType: EmdiEvents;\r\n    class: EmdiClasses;\r\n    ack: EmdiCommand;\r\n    sessionId: number;\r\n}\r\nexport declare class EmdiError {\r\n    constructor(error: number | string, cls: string);\r\n    error: number | string;\r\n    class: EmdiClasses;\r\n}\r\nexport declare const availableMeters: (MeterSubscription & Display)[];\r\n"}}
