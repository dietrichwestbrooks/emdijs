{"code":"import { EmdiClient } from './emdi-client';\r\nimport { take } from 'rxjs/operators';\r\nvar _client = null;\r\nexport function connect(deviceId, accessToken) {\r\n    if (_client) {\r\n        return Promise.resolve(_client);\r\n    }\r\n    var client = new EmdiClient();\r\n    return new Promise(function (resolve, reject) {\r\n        client.connect(deviceId, accessToken).then(function () {\r\n            client.connected$\r\n                .pipe(take(1))\r\n                .subscribe(function (connected) {\r\n                if (connected) {\r\n                    _client = client;\r\n                    resolve(client);\r\n                }\r\n                else {\r\n                    reject(new Error('Failed to connect'));\r\n                }\r\n            });\r\n            client.error$\r\n                .pipe(take(1))\r\n                .subscribe(function (err) {\r\n                return reject(new Error(err.error.toString()));\r\n            });\r\n            client.disconnected$\r\n                .pipe(take(1))\r\n                .subscribe(function () { return _client = null; });\r\n        }, function (err) { return reject(err); });\r\n    });\r\n}\r\n","dts":{"name":"C:/Aristocrat/Projects/emdijs/.rpt2_cache/placeholder/src/connect.d.ts","text":"import { EmdiClient } from './emdi-client';\r\nexport declare function connect(deviceId: number, accessToken: number): Promise<EmdiClient>;\r\n"}}
