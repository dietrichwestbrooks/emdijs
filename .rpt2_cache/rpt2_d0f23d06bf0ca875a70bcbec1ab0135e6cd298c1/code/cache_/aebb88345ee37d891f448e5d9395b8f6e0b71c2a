{"code":"import { EmdiCommands, EmdiClasses } from './emdi-command';\r\nvar LogContentEventCommand = /** @class */ (function () {\r\n    function LogContentEventCommand() {\r\n        this.name = 'LogContentEvent';\r\n        this.commandType = EmdiCommands.LogContentEvent;\r\n        this.class = EmdiClasses.EventHandler;\r\n    }\r\n    LogContentEventCommand.prototype.getXml = function (sessionId) {\r\n        return \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n        <md:mdMsg xmlns:md=\\\"http://mediaDisplay.igt.com\\\">\\n           <md:mdEventHandler xmlns:md=\\\"http://mediaDisplay.igt.com\\\" md:cmdType=\\\"request\\\" md:sessionId=\\\"\" + sessionId + \"\\\">\\n               <md:logContentEvent md:contentName=\\\"\" + this.contentName + \"\\\" md:eventName=\\\"\" + this.eventName + \"\\\" md:eventDescription=\\\"\" + this.eventDescription + \"\\\" />\\n           </md:mdEventHandler>\\n        </md:mdMsg>\";\r\n    };\r\n    return LogContentEventCommand;\r\n}());\r\nexport { LogContentEventCommand };\r\n//# sourceMappingURL=log-content-event.js.map","map":"{\"version\":3,\"file\":\"log-content-event.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../project/src/commands/log-content-event.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAe,YAAY,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAExE;IAAA;QACE,SAAI,GAAG,iBAAiB,CAAC;QACzB,gBAAW,GAAG,YAAY,CAAC,eAAe,CAAC;QAC3C,UAAK,GAAG,WAAW,CAAC,YAAY,CAAC;IAenC,CAAC;IAVC,uCAAM,GAAN,UAAO,SAAiB;QACtB,MAAM,CAAC,2NAE+F,SAAS,iEAC9D,IAAI,CAAC,WAAW,0BAC/D,IAAI,CAAC,SAAS,iCACU,IAAI,CAAC,gBAAgB,gEAE/B,CAAC;IACnB,CAAC;IACH,6BAAC;AAAD,CAAC,AAlBD,IAkBC\"}","dts":{"name":"C:/Aristocrat/Projects/emdijs/lib/src/commands/log-content-event.d.ts","text":"import { EmdiCommand, EmdiCommands, EmdiClasses } from './emdi-command';\r\nexport declare class LogContentEventCommand implements EmdiCommand {\r\n    name: string;\r\n    commandType: EmdiCommands;\r\n    class: EmdiClasses;\r\n    contentName: string;\r\n    eventName: string;\r\n    eventDescription: string;\r\n    getXml(sessionId: number): string;\r\n}\r\n"}}
