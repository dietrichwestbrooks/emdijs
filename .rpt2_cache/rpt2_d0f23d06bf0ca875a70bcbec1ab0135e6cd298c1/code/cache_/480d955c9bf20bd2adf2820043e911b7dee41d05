{"code":"import { EmdiCommands, EmdiClasses } from './emdi-command';\r\nvar ContentToHostMessageCommand = /** @class */ (function () {\r\n    function ContentToHostMessageCommand() {\r\n        this.name = 'ContentToHostMessage';\r\n        this.commandType = EmdiCommands.ContentToHostMessage;\r\n        this.class = EmdiClasses.Cabinet;\r\n    }\r\n    ContentToHostMessageCommand.prototype.getXml = function (sessionId) {\r\n        return \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n        <md:mdMsg xmlns:md=\\\"http://mediaDisplay.igt.com\\\" xmlns:hci=\\\"http://www.gamingstandards.com/emdi/schemas/v1b/HCI\\\">\\n            <md:mdCabinet md:cmdType=\\\"request\\\" md:sessionId=\\\"\" + sessionId + \"\\\">\\n                <hci:contentToHostMessage>\\n                    <hci:instructionData>\" + btoa(this.instructionData) + \"</hci:instructionData>\\n                </hci:contentToHostMessage>\\n            </md:mdCabinet>\\n        </md:mdMsg>\";\r\n    };\r\n    return ContentToHostMessageCommand;\r\n}());\r\nexport { ContentToHostMessageCommand };\r\n//# sourceMappingURL=content-to-host-message.js.map","map":"{\"version\":3,\"file\":\"content-to-host-message.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../project/src/commands/content-to-host-message.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAe,YAAY,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAExE;IAAA;QACE,SAAI,GAAG,sBAAsB,CAAC;QAC9B,gBAAW,GAAG,YAAY,CAAC,oBAAoB,CAAC;QAChD,UAAK,GAAG,WAAW,CAAC,OAAO,CAAC;IAa9B,CAAC;IAVC,4CAAM,GAAN,UAAO,SAAiB;QACtB,MAAM,CAAC,gPAEoD,SAAS,kGAE7B,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,0HAGjD,CAAC;IACnB,CAAC;IACH,kCAAC;AAAD,CAAC,AAhBD,IAgBC\"}","dts":{"name":"C:/Aristocrat/Projects/emdijs/lib/src/commands/content-to-host-message.d.ts","text":"import { EmdiCommand, EmdiCommands, EmdiClasses } from './emdi-command';\r\nexport declare class ContentToHostMessageCommand implements EmdiCommand {\r\n    name: string;\r\n    commandType: EmdiCommands;\r\n    class: EmdiClasses;\r\n    instructionData: string;\r\n    getXml(sessionId: number): string;\r\n}\r\n"}}
